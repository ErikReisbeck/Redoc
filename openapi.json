{
  "openapi": "3.0.3",
  "info": {
    "title": "InfinitePay API",
    "version": "4.0",
    "x-logo": {
      "url": "https://cmsholdinggmbh-my.sharepoint.com/personal/germain_dimicoli_corefacts_de_ext__cmsholdinggmbh_onmicrosoft_com/Documents/Microsoft%20Teams%20Chat%20Files/logo_ip.jpg"
    },
    "description": "InfinitePay Services are  a set of RESTful based web services which enable a remote system to provide payment guarantee online facilities. </br> The communication with InfinitePay services is done via REST/HTTP. </br> </br> **General HTTP response codes:** </br> 200 Success: Request was successful. </br> 400 Bad Request: The request format is invalid. </br> 401 Unauthorized: Authorization failing. </br> 403 Forbidden: Access to the resource is denied for the current principal. </br> 404 Not Found: Resource not found. </br> 500 Server Error: Request was fine, but error on serverside.",
    "contact": {
      "name": "InfinitePay",
      "email": "info@fms-mainz.de",
      "url": "https://www.infinitepay.de/"
    },
    "license": {
      "name": "PLACEHOLDER!!",
      "url": "https://www.google.de/rs"
    }
  },
  "servers": [
    {
      "url": "https://app.infinitepay.de/rs"
    },
    {
      "url": "https://test.infinitepay.de/rs"
    }
  ],
  "security": [
    {
      "Security": []
    }
  ],
  "tags": [
    {
      "name": "order",
      "description": "Order Operations"
    },
    {
      "name": "invoice",
      "description": "Invoice Operations"
    },
    {
      "name": "merchant",
      "description": "Merchant operations"
    }
  ],
  "paths": {
    "/order": {
      "post": {
        "summary": "Create an order",
        "operationId": "createOrder",
        "tags": [
          "order"
        ],
        "description": "During the Reservation an identification and credit check take place to verify whether the customer payment could be guaranteed or not in order to allow the selection of a payment method such as Invoice on Account. The purpose of the reservation is to give a credit limit to the customer and check if its order could be guaranteed based on the given limit.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Pre-Guarantee Decision: </br> 0: “DENIED” </br> 1: “ACCEPTED” </br> 2: ”PENDING”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 10000,
                      "maxLength": 10,
                      "description": "Pre-Guaranteed amount (0 if DENIED). Smallest currency unit e.g. 100,00 Euro = 10000. Note that this amount could differ from the order transaction amount in case guarantee is made in another currency"
                    },
                    "dbId": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "Unique debtor Id from InfinitePay"
                    },
                    "recommendedLimit": {
                      "type": "number",
                      "example": 20000,
                      "maxLength": 10,
                      "description": "Provided only for Risk Management Products. Smallest currency unit e.g. 100,00 Euro = 10000"
                    },
                    "pflId": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "Provided only for Risk Management Products. Profile Id of the debtor cross sector"
                    },
                    "pflGp": {
                      "type": "number",
                      "example": 20000,
                      "maxLength": 10,
                      "description": "Provided only for Risk Management Products with externally managed limit only. Profile Guarantee Position cross sector. Smallest currency unit e.g. 100,00 Euro = 10000"
                    },
                    "pflSectorGp": {
                      "type": "number",
                      "example": 20000,
                      "maxLength": 10,
                      "description": "Provided only for Risk Management Products with externally managed limit only. Profile Guarantee Position for the requested sector. Smallest currency unit e.g. 100,00 Euro = 10000"
                    },
                    "addInfo": {
                      "type": "string",
                      "example": "Info",
                      "maxLength": 254,
                      "description": "Additional information"
                    },
                    "invoiceId": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "In case of auto activation only, InfinitePay invoice reference, returned only in in case of shop has multiactivation setup enabled"
                    },
                    "debtorCorrectedData": {
                      "type": "object",
                      "properties": {
                        "cName": {
                          "type": "string",
                          "example": "EDGARS ABRATS",
                          "maxLength": 80,
                          "description": "Corrected Normalized known name (Company name for B2B and person name (First + Last) for B2C",
                          "default": null
                        },
                        "cStreet": {
                          "type": "string",
                          "example": "IM OBSTGARTEN",
                          "maxLength": 50,
                          "description": "Corrected Normalized known street",
                          "default": null
                        },
                        "cStreetNo": {
                          "type": "string",
                          "example": 47,
                          "maxLength": 15,
                          "description": "Corrected Normalized known street no",
                          "default": null
                        },
                        "cZip": {
                          "type": "string",
                          "example": 53639,
                          "maxLength": 12,
                          "description": "Corrected Normalized known zip code",
                          "default": null
                        },
                        "cCity": {
                          "type": "string",
                          "example": "KÖNIGSWINTER",
                          "maxLength": 50,
                          "description": "Corrected Normalized known city",
                          "default": null
                        },
                        "cCountry": {
                          "type": "string",
                          "example": "DEU",
                          "maxLength": 3,
                          "description": "Corrected Normalized known country. Country codes according to ISO 3166-1-alpha-3. Always equal given billing information country in case of CONFIRMED identification",
                          "default": null
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "autoCapture": {
                    "example": "1",
                    "type": "number"
                  },
                  "autoActivate": {
                    "example": "0",
                    "type": "number"
                  },
                  "limitOnly": {
                    "example": "0",
                    "type": "number"
                  },
                  "buyerData": {
                    "$ref": "#/components/schemas/buyerData"
                  },
                  "shippingData": {
                    "$ref": "#/components/schemas/shippingData"
                  },
                  "orderData": {
                    "$ref": "#/components/schemas/orderData"
                  },
                  "shoppingCart": {
                    "$ref": "#/components/schemas/shoppingCart"
                  },
                  "bankData": {
                    "$ref": "#/components/schemas/bankData"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Retrieve an order information",
        "operationId": "getOrder",
        "description": "In case of the guarantee decision can't be made at the reservation request, the guarantee status becomes “Pending”. </br> The “Pending” status will turn into “Accepted” or “Denied” after additional checks. </br> One can use this service in order to get the final guarantee decision.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id (unique)"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Pre-Guarantee Decision: </br> 0: “DENIED” </br> 1: “ACCEPTED” </br> 2: ”PENDING”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 10000,
                      "maxLength": 10,
                      "description": "Pre-Guaranteed amount. Smallest currency unit e.g. 100,00 Euro = 10000."
                    },
                    "addInfo": {
                      "type": "string",
                      "example": "Info",
                      "maxLength": 254,
                      "description": "Additional Information",
                      "default": null
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Cancel an order",
        "operationId": "cancelOrder",
        "description": "Using the “DELETE /order/{orderId}” request an order that has been previously opened by a successful “captureOrder” request can be cancelled.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id (unique)"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Cancellation process status: </br> 0: “NOT CANCELLED” </br> 1: “CANCELLED”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 0,
                      "maxLength": 10,
                      "description": "Always 0"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "totalCancelAmountInclVat",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "example": 119
          }
        ]
      }
    },
    "/order/{orderId}/invoice": {
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Create an invoice from an order",
        "operationId": "createInvoice",
        "description": "The “PUT /order/{orderId}” request must be sent when an invoice for an order with a FMS payment guarantee is created. If the selected payment method is “Purchase on Invoice”, the terms of payment (e.g. 20 or 30 days) need to be provided as well as the delivery date. As soon as the request has been received the final guarantee decision is made.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no given during reserve order request"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id (unique)"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Guarantee decision: </br> 0: “DENIED” </br> 1: “ACCEPTED”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 0,
                      "maxLength": 10,
                      "description": "Guaranteed amount (0 if DENIED). Smallest currency unit e.g. 100,00 Euro = 10000. Note that this amount could differ from the activated amount in case guarantee is made in another currency"
                    },
                    "invoiceId": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay invoice reference"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preActivate",
            "in": "query",
            "example": 1,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invoiceData": {
                    "$ref": "#/components/schemas/invoiceData"
                  },
                  "shoppingCart": {
                    "$ref": "#/components/schemas/shoppingCart"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoice/{invoiceId}": {
      "put": {
        "tags": [
          "invoice"
        ],
        "summary": "Update information of an invoice",
        "operationId": "updateInvoice",
        "description": "This service is used to postpone or to decide a date when the collection process should start on the given invoice.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id (unique)"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Guarantee decision: </br> 0: “DENIED” </br> 1: “ACCEPTED”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 20000,
                      "maxLength": 10,
                      "description": "Guaranteed amount. Smallest currency unit e.g. 100,00 Euro = 10000. Note that this amount could differ from the invoice amount in case guarantee is made in another currency"
                    },
                    "invoiceId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 40,
                      "description": "InfinitePay invoice reference"
                    },
                    "dueDate": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 8,
                      "description": "Invoice current due date"
                    },
                    "plannedCollectionDate": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 8,
                      "description": "Invoice current planned collection date"
                    },
                    "plannedFinancingDate": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 8,
                      "description": "Invoice current planned financing date"
                    },
                    "installmentCycleId": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 254,
                      "description": "Returned in case invoice is part of an installment plan"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "invoiceId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/invoiceUpdateData"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "invoice"
        ],
        "summary": "Get information from specified invoice",
        "operationId": "getInvoice",
        "description": "This service is used to get information from an invoice.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id (unique)"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Guarantee decision: </br> 0: “DENIED” </br> 1: “ACCEPTED”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 20000,
                      "maxLength": 10,
                      "description": "Remaining guaranteed open position. Smallest currency unit e.g. 100,00 Euro = 10000. Note that this amount could differ from the invoice amount in case guarantee is made in another currency"
                    },
                    "invoiceId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 40,
                      "description": "InfinitePay invoice reference"
                    },
                    "dueDate": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 8,
                      "description": "Invoice current due date"
                    },
                    "plannedCollectionDate": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 8,
                      "description": "Invoice current planned collection date"
                    },
                    "plannedFinancingDate": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 8,
                      "description": "Invoice current planned financing date"
                    },
                    "invoiceStatus": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Invoice Balance: </br> 0: Balance is closed </br> 1: Balance is open"
                    },
                    "blockingCode": {
                      "type": "string",
                      "example": "A0001",
                      "maxLength": 5,
                      "description": "Guarantee blocking code applied either manually or automatically to the invoice"
                    },
                    "installmentCycleId": {
                      "type": "string",
                      "example": 20180706,
                      "maxLength": 254,
                      "description": "Returned in case invoice is part of an installment plan"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "invoiceId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/invoice/{invoiceId}/entries": {
      "put": {
        "tags": [
          "invoice"
        ],
        "summary": "Book an invoice entry",
        "operationId": "bookInvoiceEntry",
        "description": "Using this service one can inform FMS about any event which changes the outstanding amount of an invoice. This could be a debtor payment, a credit note, refund …",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refNo": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 12,
                      "description": "InfinitePay order reference no"
                    },
                    "orderId": {
                      "type": "string",
                      "example": 56875698,
                      "maxLength": 254,
                      "description": "Shop order id (unique)"
                    },
                    "status": {
                      "type": "number",
                      "example": 1,
                      "maxLength": 1,
                      "description": "Transaction process status: </br> 0: “NOT APPLIED” </br> 1: “APPLIED”"
                    },
                    "guarAmt": {
                      "type": "number",
                      "example": 0,
                      "maxLength": 10,
                      "description": "Always 0"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "invoiceId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/invoiceEntryData"
              }
            }
          }
        }
      }
    },
    "/merchant/{merchantId}": {
      "get": {
        "tags": [
          "merchant"
        ],
        "summary": "Get a merchant settings",
        "operationId": "getShop",
        "description": "The service provides the list of general shop settings in InfinitePay. As this service is not “Order” related, it only needs the client ref to request it. InfinitePay credentials are still required to access the service.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "shopName": {
                      "type": "string",
                      "example": "Shop name",
                      "maxLength": 80,
                      "description": "Shop name as it will appear on every Ip reports"
                    },
                    "product": {
                      "type": "string",
                      "example": "B2C",
                      "maxLength": 5,
                      "description": "Shop InfinitePay product (B2C, B2B, …)"
                    },
                    "pspRef": {
                      "type": "string",
                      "example": "novalnet",
                      "maxLength": 10,
                      "description": "PSP connected to the shop"
                    },
                    "pspClientRef": {
                      "type": "string",
                      "example": 23295486,
                      "maxLength": 254,
                      "description": "Shop reference from the PSP"
                    },
                    "shopStatus": {
                      "type": "string",
                      "example": "A",
                      "maxLength": 2,
                      "description": "Status of the shop in InfinitePay. A: Activated for production use. I: Inactivated"
                    },
                    "shopApprovalStatus": {
                      "type": "string",
                      "example": "A",
                      "maxLength": 2,
                      "description": "Approval status of the shop . Status of the shop in InfinitePay. A: Approved. I: Unapproved"
                    },
                    "acceptedCountries": {
                      "type": "object",
                      "properties": {
                        "countryCd": {
                          "type": "string",
                          "example": "DEU",
                          "maxLength": 3,
                          "description": "Country ISO code used in InfinitePay"
                        },
                        "label": {
                          "type": "string",
                          "example": "Label",
                          "maxLength": 254,
                          "description": "Label of the legal form to be shown out in the legal form available drop down"
                        },
                        "acceptedLegalForms": {
                          "type": "object",
                          "properties": {
                            "legalForm": {
                              "type": "string",
                              "example": "private_person",
                              "maxLength": 20,
                              "description": "Legal form Ip specific code (private_person or company)"
                            },
                            "birthDateRequired": {
                              "type": "boolean",
                              "example": true,
                              "maxLength": 5,
                              "description": "Is birth date required at checkout time for the selected legal form(true/false)"
                            },
                            "companyNameRequired": {
                              "type": "boolean",
                              "example": true,
                              "maxLength": 5,
                              "description": "Is company name required at checkout time for the selected legal form(true/false)"
                            },
                            "crsRequired": {
                              "type": "boolean",
                              "example": true,
                              "maxLength": 5,
                              "description": "Is company register number required at checkout time for the selected legal form(true/false)"
                            },
                            "vatIdRequired": {
                              "type": "boolean",
                              "example": true,
                              "maxLength": 5,
                              "description": "Is company VAT Id required at checkout time for the selected legal form(true/false)"
                            },
                            "holderNameRequired": {
                              "type": "boolean",
                              "example": true,
                              "maxLength": 5,
                              "description": "Is holder first and last name required at checkout time for the selected legal form(true/false)"
                            },
                            "label": {
                              "type": "string",
                              "example": "Label",
                              "maxLength": 254,
                              "description": "Label of the legal form to be shown out in the legal form available drop down"
                            },
                            "debtorType": {
                              "type": "string",
                              "example": "P",
                              "maxLength": 1,
                              "description": "P: Private person, F: Freelancer, R: Registered Company, S: Small Trade"
                            }
                          }
                        }
                      }
                    },
                    "acceptedCurrencies": {
                      "type": "object",
                      "properties": {
                        "currencyCd": {
                          "type": "string",
                          "example": "EUR",
                          "maxLength": 3,
                          "description": "Currency ISO code used in InfinitePay"
                        },
                        "label": {
                          "type": "string",
                          "example": "Label",
                          "maxLength": 254,
                          "description": "Label of the legal form to be shown out in the legal form available drop down"
                        }
                      }
                    },
                    "acceptedPaymentMethods": {
                      "type": "object",
                      "properties": {
                        "acceptedShippingNeBilling": {
                          "type": "boolean",
                          "example": true,
                          "maxLength": 5,
                          "description": "Is payment method selectable if delivery address <> billing address(true/false)"
                        },
                        "paymentMethod": {
                          "type": "string",
                          "example": "Label",
                          "maxLength": 254,
                          "description": "Label of the legal form to be shown out in the legal form available drop down"
                        },
                        "payType": {
                          "type": "number",
                          "example": 1,
                          "maxLength": 1,
                          "description": "Payment Method Ip specific code"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "merchantId",
            "required": true,
            "in": "path",
            "example": "GDI0000001",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/merchant": {
      "post": {
        "tags": [
          "merchant"
        ],
        "summary": "Create a merchant",
        "operationId": "createShop",
        "description": "This service could be used to automatically create a shop in InfinitePay. The created shop will then go through our internal validation process until it is either activated or denied. The getShopSettings service could be used to check the status of the account creation validation process.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientRef": {
                      "type": "number",
                      "example": 56875698,
                      "maxLength": 10,
                      "description": "InfinitePay shop internal reference"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shopData"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Security": {
        "type": "http",
        "description": "As our security standard we use 3 Headers: HTTP basic authentication, an InfinitePay security code and a timestamp.</br> The security code is used in order to proof the integrity of the message.</br> The security code is a Hash-based message authentication code (HMAC) generated using a secret key which will be given to you at the account creation time.</br> SECURITY_CODE = base64(utf8({merchantId}:sha256(utf8({requestBody}{secretKey}{timestamp})))) where </br> {merchantId} is the merchant identifier assigned to you by InfinitePay. </br> {requestBody} is the body of the request (or an empty string for GET requests). </br> {secretKey} is the secret key assigned to your merchantId by InfinitePay. </br> {timestamp} is the same value as the timestamp header. </br> The timestamp should be the time in UTC when the message was sent. Use the format ”YYYY-MM-DD HH:mm:ss”. </br> The three headers should look like this: </br> Authorization: Basic Base64(username:password) </br> InfinitePay SECURITY_CODE </br> timestamp YYYY-MM-DD HH:mm:ss",
        "scheme": "basic"
      }
    },
    "schemas": {
      "shippingData": {
        "type": "object",
        "properties": {
          "useBillingInfo": {
            "type": "number",
            "example": 0
          },
          "gender": {
            "type": "string",
            "example": "na"
          },
          "firstName": {
            "type": "string",
            "example": "EDGARS"
          },
          "familyName": {
            "type": "string",
            "example": "ABRATS"
          },
          "street": {
            "type": "string",
            "example": "IM OBSTGARTEN 47"
          },
          "zip": {
            "type": "string",
            "example": 53639
          },
          "city": {
            "type": "string",
            "example": "KÖNIGSWINTER"
          },
          "countryCd": {
            "type": "string",
            "example": "DEU"
          },
          "phoneNr": {
            "type": "string",
            "example": "+49-173123456"
          },
          "companyName": {
            "type": "string",
            "example": "Test branch GmbH"
          }
        }
      },
      "bankData": {
        "type": "object",
        "properties": {
          "bic": {
            "type": "string",
            "example": "AGIFJR"
          },
          "iban": {
            "type": "string",
            "example": "DE0000004204987575"
          },
          "accountOwner": {
            "type": "string",
            "example": "OwnerFN OwnerLN"
          }
        }
      },
      "orderData": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string",
            "example": "127.0.0.1"
          },
          "merchantOrderRef": {
            "type": "string",
            "example": "GDI0000001"
          },
          "payId": {
            "type": "string",
            "example": "GDI0000001"
          },
          "paymentMethod": {
            "type": "number",
            "example": 1
          },
          "discountInclVat": {
            "type": "number",
            "example": 0
          },
          "shippingInclVat": {
            "type": "number",
            "example": 0
          },
          "termsAccepted": {
            "type": "number",
            "example": 1
          },
          "orderTotalInclVat": {
            "type": "number",
            "example": 595
          },
          "orderCurrency": {
            "type": "string",
            "example": "EUR"
          },
          "orderDttm": {
            "type": "string",
            "example": "20180802 131658"
          },
          "parcelCompany": {
            "type": "string",
            "example": "DHL"
          }
        }
      },
      "buyerData": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "example": "na"
          },
          "firstName": {
            "type": "string",
            "example": "EDGARS"
          },
          "familyName": {
            "type": "string",
            "example": "ABRATS"
          },
          "birthDate": {
            "type": "string",
            "example": 19380101
          },
          "buyerType": {
            "type": "string",
            "example": "private_person"
          },
          "street": {
            "type": "string",
            "example": "IM OBSTGARTEN 47"
          },
          "zip": {
            "type": "string",
            "example": 53639
          },
          "city": {
            "type": "string",
            "example": "KÖNIGSWINTER"
          },
          "countryCd": {
            "type": "string",
            "example": "DEU"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          },
          "phoneNr": {
            "type": "string",
            "example": "+49-173123456"
          },
          "userDd1": {
            "type": "string",
            "example": "DOPPELBUCHUNGSSPERRE_OK|IPSPERRE_OK|IPCOUNTRYCHECK_OK|FORDERUNGSCHECK_OK| EMAILVALIDATE_OK|NVBLACKLISTCHECK_OK|KONTONUMMERNCHECK_OK"
          },
          "userDd2": {
            "type": "string",
            "example": "ADULT|GREEN"
          },
          "userDd3": {
            "type": "string",
            "example": "IDENTITY_IN_HOUSE|GREEN"
          },
          "userDd4": {
            "type": "string",
            "example": "0|GREEN"
          },
          "userDd5": {
            "type": "string",
            "example": "PRIVATE_ONLY|GREEN"
          },
          "userDd6": {
            "type": "string",
            "example": "HOUSE_CONFIRMED|GREEN"
          },
          "userDd7": {
            "type": "string",
            "example": "170|GREEN"
          },
          "userDd8": {
            "type": "string",
            "example": "NOPROBLEM|GREEN"
          },
          "userDd9": {
            "type": "string",
            "example": "CMS Mainz GmbH|||"
          },
          "userDd10": {
            "type": "string",
            "example": "IM OBSTGARTEN|47||KOENIGSWINTER|53639|DEU"
          },
          "pspBuyerRef": {
            "type": "string",
            "example": "id0093819"
          },
          "shopBuyerRef": {
            "type": "string",
            "example": "ACC00001"
          },
          "scoreProvider": {
            "type": "string",
            "example": "CRIF_BURGEL"
          },
          "scoreProviderBuyerRef": {
            "type": "string",
            "example": "SCHUFA00001"
          },
          "score": {
            "type": "number",
            "example": 300
          },
          "scoreDate": {
            "type": "string",
            "example": 20180802
          },
          "companyData": {
            "type": "object",
            "properties": {
              "companyName": {
                "type": "string",
                "example": "Test HQ GmbH"
              },
              "vatId": {
                "type": "string",
                "example": "DE093981894"
              },
              "ownerFirstName": {
                "type": "string",
                "example": "Test First Name"
              },
              "ownerFamilyName": {
                "type": "string",
                "example": "Test Last Name"
              }
            }
          },
          "positionInCompany": {
            "type": "string",
            "example": "sales manager"
          }
        }
      },
      "shoppingCart": {
        "type": "object",
        "properties": {
          "shoppingCartLines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "merchantArticleRef": {
                  "type": "string",
                  "example": 1
                },
                "articleName": {
                  "type": "string",
                  "example": "Nintento Switch"
                },
                "quantity": {
                  "type": "number",
                  "example": 3
                },
                "unit": {
                  "type": "string",
                  "example": "pcs"
                },
                "unitPriceExclVat": {
                  "type": "number",
                  "example": 100
                },
                "unitPriceInclVat": {
                  "type": "number",
                  "example": 119
                },
                "vatPercentage": {
                  "type": "number",
                  "example": 19
                }
              }
            }
          }
        }
      },
      "invoiceData": {
        "type": "object",
        "properties": {
          "invoiceDate": {
            "type": "string",
            "example": 20180802,
            "maxLength": 8,
            "description": "Invoice accounting date (at the shop) yyyymmdd </br> In case of installment plan one time activation - start date of the installment plan"
          },
          "dueDate": {
            "type": "string",
            "example": 20180802,
            "maxLength": 8,
            "description": "yyyymmdd </br> In case of installment plan one time activation - end date of the installment plan"
          },
          "deliveryDate": {
            "type": "string",
            "example": 20180802,
            "maxLength": 8,
            "description": "yyyymmdd",
            "default": "invoiceDate"
          },
          "invoiceReference": {
            "type": "number",
            "example": 2018000035,
            "maxLength": 50,
            "description": "Reference no of invoice"
          },
          "invoiceTotalInclVat": {
            "type": "number",
            "example": 119,
            "maxLength": 50,
            "description": "Total invoice amount including Vat"
          },
          "paymentReference": {
            "type": "number",
            "example": 428959,
            "maxLength": 254,
            "description": "Payment reference to be printed on the invoice",
            "default": null
          },
          "downPaymentPercentage": {
            "type": "number",
            "example": 5000,
            "maxLength": 10,
            "description": "Down payment amount - Lowest currency unit"
          },
          "downPaymentVatPercentage": {
            "type": "number",
            "example": 19,
            "maxLength": 4,
            "description": "Down payment specific VAT% to be applied"
          },
          "downPaymentDueDt": {
            "type": "number",
            "example": 20180906,
            "maxLength": 8,
            "description": "Down payment expected before given date"
          },
          "installmentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/installmentPlan"
            }
          }
        }
      },
      "invoiceUpdateData": {
        "type": "object",
        "properties": {
          "plannedCollectionDate": {
            "type": "string",
            "example": 20180802,
            "maxLength": 8,
            "description": "yyyymmdd"
          },
          "installmentCycleId": {
            "type": "string",
            "example": 2018000035,
            "maxLength": 254,
            "description": "In case invoice is linked to an installment plan cycle"
          }
        }
      },
      "invoiceEntryData": {
        "type": "object",
        "properties": {
          "invoiceNo": {
            "type": "number",
            "maxLength": 12,
            "example": 2018000035,
            "description": "InfinitePay invoice no (ie. INVOICE_ID from ActivateOrder service response)"
          },
          "docId": {
            "type": "string",
            "maxLength": 40,
            "example": 2018000035,
            "description": "Document ID from the client , e.g credit note or reverse invoice."
          },
          "trsType": {
            "type": "string",
            "maxLength": 5,
            "example": "DD",
            "description": "CB, CC, CN, DD, DP, LR, RF, UNCC, UNCN, UNDP and UNCB"
          },
          "trsReason": {
            "type": "string",
            "maxLength": 50,
            "example": "AC01",
            "description": "Transaction Reason. Could be used for Direct Debit Chargeback (SEPA Reason Codes).",
            "default": null
          },
          "trsAmt": {
            "type": "number",
            "maxLength": 10,
            "example": 119,
            "description": "Transaction amount. Smallest currency unit e.g. 100,00 Euro = 10000"
          },
          "trsCurrency": {
            "type": "string",
            "maxLength": 3,
            "example": "EUR",
            "description": "Currency codes according to ISO 4217"
          },
          "accountingDt": {
            "type": "string",
            "maxLength": 8,
            "example": 20180802,
            "description": "Accounting date of the  shop transaction yyyymmdd"
          },
          "valueDt": {
            "type": "string",
            "maxLength": 8,
            "example": 20180802,
            "description": "Value date for payments. For other credit types provide “accounting date”."
          },
          "comment": {
            "type": "string",
            "maxLength": 254,
            "example": "comment",
            "description": "Any free comment",
            "default": null
          }
        }
      },
      "shopData": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 80,
            "example": "test@test.com",
            "description": "Contact person email"
          },
          "shopUrl": {
            "type": "string",
            "maxLength": 254,
            "example": "https://test.test",
            "description": "Website URL of the shop"
          },
          "securityCd": {
            "type": "string",
            "maxLength": 254,
            "example": "hqSwdad2134SAdawd",
            "description": "Any free comment"
          },
          "companyName": {
            "type": "string",
            "maxLength": 255,
            "example": "Test HQ GmbH",
            "description": "Company Name of the Shop"
          },
          "pspClientRef": {
            "type": "string",
            "maxLength": 254,
            "example": "id0093819",
            "description": "Required when shop provided from PSP"
          },
          "pspRef": {
            "type": "string",
            "maxLength": 10,
            "example": "ACC00001",
            "description": "PSP Reference"
          },
          "legalForm": {
            "type": "string",
            "maxLength": 20,
            "example": "private_person",
            "description": "private_person or company"
          },
          "country": {
            "type": "string",
            "maxLength": 3,
            "example": "DEU",
            "description": "Shop company country. Country codes according to ISO 3166-1-alpha-3"
          },
          "street": {
            "type": "string",
            "maxLength": 50,
            "example": "IM OBSTGARTEN 47",
            "description": "Full street address including street number"
          },
          "zip": {
            "type": "string",
            "maxLength": 12,
            "example": 53639,
            "description": "Adress zip code"
          },
          "city": {
            "type": "string",
            "maxLength": 50,
            "example": "KÖNIGSWINTER",
            "description": "Address city"
          },
          "contactName": {
            "type": "string",
            "maxLength": 254,
            "example": "EDGARS ABRATS",
            "description": "Contact person full name"
          },
          "language": {
            "type": "string",
            "maxLength": 2,
            "example": "en",
            "description": "Prefered correspondence language code. Language codes according to ISO 639-1:2002-alpha-2."
          },
          "telephone": {
            "type": "string",
            "maxLength": 50,
            "example": "+49-173123456",
            "description": "Contact phone"
          }
        }
      },
      "installmentPlan": {
        "type": "object",
        "properties": {
          "cycleRank": {
            "type": "number",
            "example": 2,
            "maxLength": 5,
            "description": "Cycle position in the plan – Integer, from earliest to latest"
          },
          "cycleAmtGross": {
            "type": "number",
            "example": 119,
            "maxLength": 10,
            "description": "Cycle amount including VAT – Lowest currency unit"
          },
          "cycleDueDate": {
            "type": "string",
            "example": 20180802,
            "maxLength": 8,
            "description": "Cycle maturity date in the format yyyymmdd"
          }
        }
      }
    }
  }
}